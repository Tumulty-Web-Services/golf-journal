{"ast":null,"code":"var _jsxFileName = \"/home/ptums/Desktop/sites/golf-journal/app/components/RadioToggle.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styles from '../styles/RadioToggle.module.css';\nexport default function RadioToggle(_ref) {\n  _s();\n\n  var _this = this;\n\n  var toggleValues = _ref.toggleValues;\n\n  var _useState = useState(toggleValues[0].label),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  function saveValue(item) {\n    setValue(item);\n  }\n\n  function _onChange() {\n    return;\n  }\n\n  return __jsx(\"div\", {\n    className: \"\".concat(styles.radioToolbar, \" stories-radioToolbar\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, toggleValues.map(function (radioItem) {\n    return __jsx(\"span\", {\n      key: radioItem.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      id: \"radioToggle\",\n      name: radioItem.name,\n      value: radioItem.label,\n      onClick: function onClick() {\n        return saveValue(radioItem.label);\n      },\n      onChange: function onChange() {\n        return _onChange;\n      },\n      checked: value === radioItem.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"radioToggle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, radioItem.text));\n  }));\n}\n\n_s(RadioToggle, \"7O6wVjtC1EqxwXzpinNgeQPNKQw=\");\n\n_c = RadioToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"RadioToggle\");","map":{"version":3,"sources":["/home/ptums/Desktop/sites/golf-journal/app/components/RadioToggle.tsx"],"names":["React","useState","styles","RadioToggle","toggleValues","label","value","setValue","saveValue","item","onChange","radioToolbar","map","radioItem","name","text"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AAOA,eAAe,SAASC,WAAT,OAA2D;AAAA;;AAAA;;AAAA,MAApCC,YAAoC,QAApCA,YAAoC;;AAAA,kBAC9CH,QAAQ,CAACG,YAAY,CAAC,CAAD,CAAZ,CAAgBC,KAAjB,CADsC;AAAA,MACjEC,KADiE;AAAA,MAC1DC,QAD0D;;AAGxE,WAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvBF,IAAAA,QAAQ,CAACE,IAAD,CAAR;AACD;;AAED,WAASC,SAAT,GAAoB;AAClB;AACD;;AAED,SACE;AAAK,IAAA,SAAS,YAAKR,MAAM,CAACS,YAAZ,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,YAAY,CAACQ,GAAb,CAAiB,UAACC,SAAD;AAAA,WAChB;AAAM,MAAA,GAAG,EAAEA,SAAS,CAACR,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,EAAE,EAAC,aAFL;AAGE,MAAA,IAAI,EAAEQ,SAAS,CAACC,IAHlB;AAIE,MAAA,KAAK,EAAED,SAAS,CAACR,KAJnB;AAKE,MAAA,OAAO,EAAE;AAAA,eAAMG,SAAS,CAACK,SAAS,CAACR,KAAX,CAAf;AAAA,OALX;AAME,MAAA,QAAQ,EAAE;AAAA,eAAMK,SAAN;AAAA,OANZ;AAOE,MAAA,OAAO,EAAEJ,KAAK,KAAKO,SAAS,CAACR,KAP/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BQ,SAAS,CAACE,IAAxC,CAVF,CADgB;AAAA,GAAjB,CADH,CADF;AAkBD;;GA7BuBZ,W;;KAAAA,W","sourcesContent":["import React, { useState } from 'react'\nimport styles from '../styles/RadioToggle.module.css'\nimport { RadioValue } from '../interfaces'\n\ntype Props = {\n  toggleValues: RadioValue[]\n}\n\nexport default function RadioToggle({ toggleValues }: Props): JSX.Element {\n  const [value, setValue] = useState(toggleValues[0].label)\n\n  function saveValue(item) {\n    setValue(item)\n  }\n\n  function onChange() {\n    return\n  }\n\n  return (\n    <div className={`${styles.radioToolbar} stories-radioToolbar`}>\n      {toggleValues.map((radioItem) => (\n        <span key={radioItem.label}>\n          <input\n            type=\"radio\"\n            id=\"radioToggle\"\n            name={radioItem.name}\n            value={radioItem.label}\n            onClick={() => saveValue(radioItem.label)}\n            onChange={() => onChange}\n            checked={value === radioItem.label}\n          />\n          <label htmlFor=\"radioToggle\">{radioItem.text}</label>\n        </span>\n      ))}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}